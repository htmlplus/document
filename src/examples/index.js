'use client';

/**************************************************
 * THIS FILE IS AUTO-GENERATED, DO NOT EDIT MANUALY
 **************************************************/

import dynamic from 'next/dynamic';

export const AccordionAsyncContent = dynamic(() => import('./AccordionAsyncContent'), { suspense: true });
export const AccordionCustomIcon = dynamic(() => import('./AccordionCustomIcon'), { suspense: true });
export const AccordionCustomSummaryTemplate = dynamic(() => import('./AccordionCustomSummaryTemplate'), { suspense: true });
export const AccordionCustomized = dynamic(() => import('./AccordionCustomized'), { suspense: true });
export const AccordionDefault = dynamic(() => import('./AccordionDefault'), { suspense: true });
export const AccordionDisabled = dynamic(() => import('./AccordionDisabled'), { suspense: true });
export const AccordionMethods = dynamic(() => import('./AccordionMethods'), { suspense: true });
export const AccordionOpen = dynamic(() => import('./AccordionOpen'), { suspense: true });
export const AccordionPersistent = dynamic(() => import('./AccordionPersistent'), { suspense: true });
export const AccordionPreventFromToggling = dynamic(() => import('./AccordionPreventFromToggling'), { suspense: true });
export const AccordionSlots = dynamic(() => import('./AccordionSlots'), { suspense: true });
export const AnimationButton = dynamic(() => import('./AnimationButton'), { suspense: true });
export const AnimationDefault = dynamic(() => import('./AnimationDefault'), { suspense: true });
export const AnimationDuration = dynamic(() => import('./AnimationDuration'), { suspense: true });
export const AnimationEasing = dynamic(() => import('./AnimationEasing'), { suspense: true });
export const AnimationIntersection = dynamic(() => import('./AnimationIntersection'), { suspense: true });
export const AnimationKeyframes = dynamic(() => import('./AnimationKeyframes'), { suspense: true });
export const AnimationMethods = dynamic(() => import('./AnimationMethods'), { suspense: true });
export const AnimationName = dynamic(() => import('./AnimationName'), { suspense: true });
export const AnimationRegisterACustomName = dynamic(() => import('./AnimationRegisterACustomName'), { suspense: true });
export const AspectRatioCard = dynamic(() => import('./AspectRatioCard'), { suspense: true });
export const AspectRatioDefault = dynamic(() => import('./AspectRatioDefault'), { suspense: true });
export const AspectRatioImage = dynamic(() => import('./AspectRatioImage'), { suspense: true });
export const AspectRatioMap = dynamic(() => import('./AspectRatioMap'), { suspense: true });
export const AspectRatioMore = dynamic(() => import('./AspectRatioMore'), { suspense: true });
export const AspectRatioVideo = dynamic(() => import('./AspectRatioVideo'), { suspense: true });
export const AvatarCustomSize = dynamic(() => import('./AvatarCustomSize'), { suspense: true });
export const AvatarDefault = dynamic(() => import('./AvatarDefault'), { suspense: true });
export const AvatarGroupGutter = dynamic(() => import('./AvatarGroupGutter'), { suspense: true });
export const AvatarGroupHoverable = dynamic(() => import('./AvatarGroupHoverable'), { suspense: true });
export const AvatarGroupLinkWithTooltip = dynamic(() => import('./AvatarGroupLinkWithTooltip'), { suspense: true });
export const AvatarGroupLink = dynamic(() => import('./AvatarGroupLink'), { suspense: true });
export const AvatarGroupStacked = dynamic(() => import('./AvatarGroupStacked'), { suspense: true });
export const AvatarGroupTooltip = dynamic(() => import('./AvatarGroupTooltip'), { suspense: true });
export const AvatarGroup = dynamic(() => import('./AvatarGroup'), { suspense: true });
export const AvatarIconRatioGlobal = dynamic(() => import('./AvatarIconRatioGlobal'), { suspense: true });
export const AvatarIconRatioInline = dynamic(() => import('./AvatarIconRatioInline'), { suspense: true });
export const AvatarIcon = dynamic(() => import('./AvatarIcon'), { suspense: true });
export const AvatarImage = dynamic(() => import('./AvatarImage'), { suspense: true });
export const AvatarLinkWithTooltip = dynamic(() => import('./AvatarLinkWithTooltip'), { suspense: true });
export const AvatarLink = dynamic(() => import('./AvatarLink'), { suspense: true });
export const AvatarShape = dynamic(() => import('./AvatarShape'), { suspense: true });
export const AvatarSize = dynamic(() => import('./AvatarSize'), { suspense: true });
export const AvatarSlots = dynamic(() => import('./AvatarSlots'), { suspense: true });
export const AvatarSvgRatioGlobal = dynamic(() => import('./AvatarSvgRatioGlobal'), { suspense: true });
export const AvatarSvgRatioInline = dynamic(() => import('./AvatarSvgRatioInline'), { suspense: true });
export const AvatarSvg = dynamic(() => import('./AvatarSvg'), { suspense: true });
export const AvatarText = dynamic(() => import('./AvatarText'), { suspense: true });
export const AvatarTooltip = dynamic(() => import('./AvatarTooltip'), { suspense: true });
export const AvatarWildcardSize = dynamic(() => import('./AvatarWildcardSize'), { suspense: true });
export const BreadcrumbCustomExpander = dynamic(() => import('./BreadcrumbCustomExpander'), { suspense: true });
export const BreadcrumbCustomSeparator = dynamic(() => import('./BreadcrumbCustomSeparator'), { suspense: true });
export const BreadcrumbCustomized = dynamic(() => import('./BreadcrumbCustomized'), { suspense: true });
export const BreadcrumbDefault = dynamic(() => import('./BreadcrumbDefault'), { suspense: true });
export const BreadcrumbLimitation = dynamic(() => import('./BreadcrumbLimitation'), { suspense: true });
export const BreadcrumbSeparator = dynamic(() => import('./BreadcrumbSeparator'), { suspense: true });
export const BreadcrumbWithIcon = dynamic(() => import('./BreadcrumbWithIcon'), { suspense: true });
export const BrowseAccept = dynamic(() => import('./BrowseAccept'), { suspense: true });
export const BrowseDefault = dynamic(() => import('./BrowseDefault'), { suspense: true });
export const BrowseDisabled = dynamic(() => import('./BrowseDisabled'), { suspense: true });
export const BrowseDroppable = dynamic(() => import('./BrowseDroppable'), { suspense: true });
export const BrowseMinAndMaxSize = dynamic(() => import('./BrowseMinAndMaxSize'), { suspense: true });
export const BrowseMinAndMax = dynamic(() => import('./BrowseMinAndMax'), { suspense: true });
export const BrowseMultiple = dynamic(() => import('./BrowseMultiple'), { suspense: true });
export const CardBackgroundColor = dynamic(() => import('./CardBackgroundColor'), { suspense: true });
export const CardBorderColor = dynamic(() => import('./CardBorderColor'), { suspense: true });
export const CardBorderWidth = dynamic(() => import('./CardBorderWidth'), { suspense: true });
export const CardCustomize = dynamic(() => import('./CardCustomize'), { suspense: true });
export const CardDefault = dynamic(() => import('./CardDefault'), { suspense: true });
export const CardElevation = dynamic(() => import('./CardElevation'), { suspense: true });
export const CardOutlined = dynamic(() => import('./CardOutlined'), { suspense: true });
export const CardTile = dynamic(() => import('./CardTile'), { suspense: true });
export const CenterDefault = dynamic(() => import('./CenterDefault'), { suspense: true });
export const CenterInline = dynamic(() => import('./CenterInline'), { suspense: true });
export const ClickOutsideDefault = dynamic(() => import('./ClickOutsideDefault'), { suspense: true });
export const ClickOutsideMenu = dynamic(() => import('./ClickOutsideMenu'), { suspense: true });
export const CounterDecimal = dynamic(() => import('./CounterDecimal'), { suspense: true });
export const CounterDefault = dynamic(() => import('./CounterDefault'), { suspense: true });
export const CounterDelay = dynamic(() => import('./CounterDelay'), { suspense: true });
export const CounterDuration = dynamic(() => import('./CounterDuration'), { suspense: true });
export const CounterIntersection = dynamic(() => import('./CounterIntersection'), { suspense: true });
export const CounterNumerals = dynamic(() => import('./CounterNumerals'), { suspense: true });
export const CounterRange = dynamic(() => import('./CounterRange'), { suspense: true });
export const CounterReverse = dynamic(() => import('./CounterReverse'), { suspense: true });
export const CounterSeparatorDecimal = dynamic(() => import('./CounterSeparatorDecimal'), { suspense: true });
export const CounterSeparator = dynamic(() => import('./CounterSeparator'), { suspense: true });
export const CropperArea = dynamic(() => import('./CropperArea'), { suspense: true });
export const CropperAspectRatio = dynamic(() => import('./CropperAspectRatio'), { suspense: true });
export const CropperBackdrop = dynamic(() => import('./CropperBackdrop'), { suspense: true });
export const CropperBackground = dynamic(() => import('./CropperBackground'), { suspense: true });
export const CropperDefault = dynamic(() => import('./CropperDefault'), { suspense: true });
export const CropperDialog = dynamic(() => import('./CropperDialog'), { suspense: true });
export const CropperDisabled = dynamic(() => import('./CropperDisabled'), { suspense: true });
export const CropperGuides = dynamic(() => import('./CropperGuides'), { suspense: true });
export const CropperIndicator = dynamic(() => import('./CropperIndicator'), { suspense: true });
export const CropperMode = dynamic(() => import('./CropperMode'), { suspense: true });
export const CropperShape = dynamic(() => import('./CropperShape'), { suspense: true });
export const CropperStyles = dynamic(() => import('./CropperStyles'), { suspense: true });
export const CropperToBase64 = dynamic(() => import('./CropperToBase64'), { suspense: true });
export const CropperToBlob = dynamic(() => import('./CropperToBlob'), { suspense: true });
export const CropperToUrl = dynamic(() => import('./CropperToUrl'), { suspense: true });
export const CropperZoomRatio = dynamic(() => import('./CropperZoomRatio'), { suspense: true });
export const CropperZoomable = dynamic(() => import('./CropperZoomable'), { suspense: true });
export const DialogAnimation = dynamic(() => import('./DialogAnimation'), { suspense: true });
export const DialogBackdrop = dynamic(() => import('./DialogBackdrop'), { suspense: true });
export const DialogDefault = dynamic(() => import('./DialogDefault'), { suspense: true });
export const DialogFullHeight = dynamic(() => import('./DialogFullHeight'), { suspense: true });
export const DialogFullWidth = dynamic(() => import('./DialogFullWidth'), { suspense: true });
export const DialogFullscreen = dynamic(() => import('./DialogFullscreen'), { suspense: true });
export const DialogNesting = dynamic(() => import('./DialogNesting'), { suspense: true });
export const DialogPersistent = dynamic(() => import('./DialogPersistent'), { suspense: true });
export const DialogPlacement = dynamic(() => import('./DialogPlacement'), { suspense: true });
export const DialogPrevent = dynamic(() => import('./DialogPrevent'), { suspense: true });
export const DialogScrollable = dynamic(() => import('./DialogScrollable'), { suspense: true });
export const DialogSpecificScrollable = dynamic(() => import('./DialogSpecificScrollable'), { suspense: true });
export const DialogSticky = dynamic(() => import('./DialogSticky'), { suspense: true });
export const DividerCard = dynamic(() => import('./DividerCard'), { suspense: true });
export const DividerCustomize = dynamic(() => import('./DividerCustomize'), { suspense: true });
export const DividerDefault = dynamic(() => import('./DividerDefault'), { suspense: true });
export const DividerHorizontal = dynamic(() => import('./DividerHorizontal'), { suspense: true });
export const DividerPlacement = dynamic(() => import('./DividerPlacement'), { suspense: true });
export const DividerSticky = dynamic(() => import('./DividerSticky'), { suspense: true });
export const DividerType = dynamic(() => import('./DividerType'), { suspense: true });
export const DividerVariant = dynamic(() => import('./DividerVariant'), { suspense: true });
export const DividerVertical = dynamic(() => import('./DividerVertical'), { suspense: true });
export const DividerWidth = dynamic(() => import('./DividerWidth'), { suspense: true });
export const DrawerDefault = dynamic(() => import('./DrawerDefault'), { suspense: true });
export const FakerApi = dynamic(() => import('./FakerApi'), { suspense: true });
export const FakerArguments = dynamic(() => import('./FakerArguments'), { suspense: true });
export const FakerDefault = dynamic(() => import('./FakerDefault'), { suspense: true });
export const FakerLocalization = dynamic(() => import('./FakerLocalization'), { suspense: true });
export const FakerMore = dynamic(() => import('./FakerMore'), { suspense: true });
export const FakerSeed = dynamic(() => import('./FakerSeed'), { suspense: true });
export const FormatBytesDecimals = dynamic(() => import('./FormatBytesDecimals'), { suspense: true });
export const FormatBytesDefault = dynamic(() => import('./FormatBytesDefault'), { suspense: true });
export const FormatBytesDisplay = dynamic(() => import('./FormatBytesDisplay'), { suspense: true });
export const FormatBytesFormatting = dynamic(() => import('./FormatBytesFormatting'), { suspense: true });
export const FormatBytesLocale = dynamic(() => import('./FormatBytesLocale'), { suspense: true });
export const FormatBytesSeparator = dynamic(() => import('./FormatBytesSeparator'), { suspense: true });
export const FormatBytesSigned = dynamic(() => import('./FormatBytesSigned'), { suspense: true });
export const FormatBytesStandard = dynamic(() => import('./FormatBytesStandard'), { suspense: true });
export const FormatBytesUnit = dynamic(() => import('./FormatBytesUnit'), { suspense: true });
export const GridAlignContent = dynamic(() => import('./GridAlignContent'), { suspense: true });
export const GridAlignItems = dynamic(() => import('./GridAlignItems'), { suspense: true });
export const GridAlignSelf = dynamic(() => import('./GridAlignSelf'), { suspense: true });
export const GridAutoSizing = dynamic(() => import('./GridAutoSizing'), { suspense: true });
export const GridDefault = dynamic(() => import('./GridDefault'), { suspense: true });
export const GridGutterX = dynamic(() => import('./GridGutterX'), { suspense: true });
export const GridGutterY = dynamic(() => import('./GridGutterY'), { suspense: true });
export const GridGutter = dynamic(() => import('./GridGutter'), { suspense: true });
export const GridHide = dynamic(() => import('./GridHide'), { suspense: true });
export const GridJustifyContent = dynamic(() => import('./GridJustifyContent'), { suspense: true });
export const GridOffset = dynamic(() => import('./GridOffset'), { suspense: true });
export const GridOrder = dynamic(() => import('./GridOrder'), { suspense: true });
export const GridReverse = dynamic(() => import('./GridReverse'), { suspense: true });
export const GridVertical = dynamic(() => import('./GridVertical'), { suspense: true });
export const GridWrap = dynamic(() => import('./GridWrap'), { suspense: true });
export const IconColor = dynamic(() => import('./IconColor'), { suspense: true });
export const IconCustomColor = dynamic(() => import('./IconCustomColor'), { suspense: true });
export const IconCustomSize = dynamic(() => import('./IconCustomSize'), { suspense: true });
export const IconDefault = dynamic(() => import('./IconDefault'), { suspense: true });
export const IconFlip = dynamic(() => import('./IconFlip'), { suspense: true });
export const IconFontAwesome = dynamic(() => import('./IconFontAwesome'), { suspense: true });
export const IconLabel = dynamic(() => import('./IconLabel'), { suspense: true });
export const IconMaterial = dynamic(() => import('./IconMaterial'), { suspense: true });
export const IconMultipleLibrary = dynamic(() => import('./IconMultipleLibrary'), { suspense: true });
export const IconName = dynamic(() => import('./IconName'), { suspense: true });
export const IconOverrideSize = dynamic(() => import('./IconOverrideSize'), { suspense: true });
export const IconRegisterACustomName = dynamic(() => import('./IconRegisterACustomName'), { suspense: true });
export const IconResolver = dynamic(() => import('./IconResolver'), { suspense: true });
export const IconRotate = dynamic(() => import('./IconRotate'), { suspense: true });
export const IconSize = dynamic(() => import('./IconSize'), { suspense: true });
export const IntersectionDefault = dynamic(() => import('./IntersectionDefault'), { suspense: true });
export const IntersectionLazyImage = dynamic(() => import('./IntersectionLazyImage'), { suspense: true });
export const ProgressBarAriaLabel = dynamic(() => import('./ProgressBarAriaLabel'), { suspense: true });
export const ProgressBarBuffer = dynamic(() => import('./ProgressBarBuffer'), { suspense: true });
export const ProgressBarCustomLabel = dynamic(() => import('./ProgressBarCustomLabel'), { suspense: true });
export const ProgressBarDefault = dynamic(() => import('./ProgressBarDefault'), { suspense: true });
export const ProgressBarHeight = dynamic(() => import('./ProgressBarHeight'), { suspense: true });
export const ProgressBarIndeterminate = dynamic(() => import('./ProgressBarIndeterminate'), { suspense: true });
export const ProgressBarLabel = dynamic(() => import('./ProgressBarLabel'), { suspense: true });
export const ProgressBarMinAndMax = dynamic(() => import('./ProgressBarMinAndMax'), { suspense: true });
export const ProgressBarValue = dynamic(() => import('./ProgressBarValue'), { suspense: true });
export const ScrollDetectorDefault = dynamic(() => import('./ScrollDetectorDefault'), { suspense: true });
export const ScrollDetectorScrollIndicator = dynamic(() => import('./ScrollDetectorScrollIndicator'), { suspense: true });
export const SignatureClearOnResize = dynamic(() => import('./SignatureClearOnResize'), { suspense: true });
export const SignatureClear = dynamic(() => import('./SignatureClear'), { suspense: true });
export const SignatureColor = dynamic(() => import('./SignatureColor'), { suspense: true });
export const SignatureDefault = dynamic(() => import('./SignatureDefault'), { suspense: true });
export const SignatureDimensions = dynamic(() => import('./SignatureDimensions'), { suspense: true });
export const SignatureDisabled = dynamic(() => import('./SignatureDisabled'), { suspense: true });
export const SignatureDistance = dynamic(() => import('./SignatureDistance'), { suspense: true });
export const SignatureHistory = dynamic(() => import('./SignatureHistory'), { suspense: true });
export const SignatureResizable = dynamic(() => import('./SignatureResizable'), { suspense: true });
export const SignatureSave = dynamic(() => import('./SignatureSave'), { suspense: true });
export const SignatureWidth = dynamic(() => import('./SignatureWidth'), { suspense: true });
export const SpinnerColor = dynamic(() => import('./SpinnerColor'), { suspense: true });
export const SpinnerCustomSize = dynamic(() => import('./SpinnerCustomSize'), { suspense: true });
export const SpinnerCustomize = dynamic(() => import('./SpinnerCustomize'), { suspense: true });
export const SpinnerDefault = dynamic(() => import('./SpinnerDefault'), { suspense: true });
export const SpinnerSize = dynamic(() => import('./SpinnerSize'), { suspense: true });
export const SpinnerType = dynamic(() => import('./SpinnerType'), { suspense: true });
export const StickyContacts = dynamic(() => import('./StickyContacts'), { suspense: true });
export const StickyDefault = dynamic(() => import('./StickyDefault'), { suspense: true });
export const StickySidebar = dynamic(() => import('./StickySidebar'), { suspense: true });
export const StickySlots = dynamic(() => import('./StickySlots'), { suspense: true });
export const StickyStateAttribute = dynamic(() => import('./StickyStateAttribute'), { suspense: true });
export const StickyTop = dynamic(() => import('./StickyTop'), { suspense: true });
export const SwitchChecked = dynamic(() => import('./SwitchChecked'), { suspense: true });
export const SwitchCustomized = dynamic(() => import('./SwitchCustomized'), { suspense: true });
export const SwitchDefault = dynamic(() => import('./SwitchDefault'), { suspense: true });
export const SwitchDisabled = dynamic(() => import('./SwitchDisabled'), { suspense: true });
export const SwitchEvent = dynamic(() => import('./SwitchEvent'), { suspense: true });
export const SwitchThreeDimensional = dynamic(() => import('./SwitchThreeDimensional'), { suspense: true });
export const TabsBelow = dynamic(() => import('./TabsBelow'), { suspense: true });
export const TabsDefault = dynamic(() => import('./TabsDefault'), { suspense: true });
export const TabsGrow = dynamic(() => import('./TabsGrow'), { suspense: true });
export const TabsJustify = dynamic(() => import('./TabsJustify'), { suspense: true });
export const TabsReverse = dynamic(() => import('./TabsReverse'), { suspense: true });
export const TabsSeparate = dynamic(() => import('./TabsSeparate'), { suspense: true });
export const TabsVertical = dynamic(() => import('./TabsVertical'), { suspense: true });